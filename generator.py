

benchmarks = [
  [ 1.0,  1.0,  0.0,  0.0,  0.0 ],  # 0
  [ 7.5,  1.0, -1.0,  0.0,  0.0 ],  # 1
  [ 1.0,  1.0,  0.5, -0.8,  0.6 ],  # 2
  [ 1.0,  1.0, -1.5,  0.0, -0.8 ],  # 3
  [-3.5,  1.5, -3.0,  0.0,  0.0 ],  # 4
  [ 1.0,  1.0,  0.0,  0.8, -1.0 ],  # 5
  [ 2.4,  1.0,  0.0,  0.2, -0.2 ],  # 6
  [ 5.0,  1.0,  0.0,  0.2, -0.2 ],  # 7
  [15.0,  1.0,  0.0, -1.0,  1.0 ],  # 8
  [ 1.0,  1.0,  1.0, -0.6,  0.6 ],  # 9
  [10.0,  1.5, -1.0,  0.0,  0.0 ],  # 10
  [ 2.4,  1.0,  0.0,  1.0, -1.0 ],  # 11
  [15.0,  1.0,  1.0,  0.0,  0.0 ],  # 12
]

                 # ctr   cy  c2  a1  a2
parameters_map = [ 189, 188, 30, 31, 32 ]

proc_template = """
set group_subprocesses Auto 
set ignore_six_quark_processes False 
set loop_optimized_output True 
set complex_mass_scheme False 
import model BSM_gg_hh-{RESTRICTION}
define lep = e+ e- mu+ mu-
define nus = ve~ vm~ ve vm
generate p p > h h {HIGGS_DECAY_1} {HIGGS_DECAY_2} 
output {OUTPUT_NAME}
exit
"""

proc_template_sm = """
set default_unset_couplings 99
set group_subprocesses Auto
set ignore_six_quark_processes False
set loop_optimized_output True
set loop_color_flows False
set gauge unitary
set complex_mass_scheme False
set max_npoint_for_channel 0
import model sm
define p = g u c d s u~ c~ d~ s~
define j = g u c d s u~ c~ d~ s~
define l+ = e+ mu+
define l- = e- mu-
define vl = ve vm vt
define vl~ = ve~ vm~ vt~
import model loop_sm
generate p p > h h [QCD]
output {OUTPUT_NAME}
exit
"""

madspin_template = """
decay h > {CHANNEL_1}
decay h > {CHANNEL_2}
"""

restrict_template = """
######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY THE UFO  #####################
######################################################################

###################################
## INFORMATION FOR SMINPUTS
###################################
Block SMINPUTS 
    1 1.279000e+02 # aEWM1 
    2 1.166370e-05 # Gf 
    3 1.184000e-01 # aS 

###################################
## INFORMATION FOR MASS
###################################
Block MASS 
    5 4.700000e+00 # MB 
    6 1.730000e+02 # MT 
   15 1.777000e+00 # MTA 
   23 9.118760e+01 # MZ 
   25 1.250000e+02 # MH 
##  Not dependent paramater.
## Those values should be edited following analytical the 
## analytical expression. Some generator could simply ignore 
## those values and use the analytical expression
  22 0.000000 # a : 0.0 
  24 79.824360 # W+ : cmath.sqrt(MZ**2/2. + cmath.sqrt(MZ**4/4. - (aEW*cmath.pi*MZ**2)/(Gf*cmath.sqrt(2)))) 
  21 0.000000 # g : 0.0 
  9000001 0.000000 # ghA : 0.0 
  9000003 79.824360 # ghWp : cmath.sqrt(MZ**2/2. + cmath.sqrt(MZ**4/4. - (aEW*cmath.pi*MZ**2)/(Gf*cmath.sqrt(2)))) 
  9000004 79.824360 # ghWm : cmath.sqrt(MZ**2/2. + cmath.sqrt(MZ**4/4. - (aEW*cmath.pi*MZ**2)/(Gf*cmath.sqrt(2)))) 
  9000005 0.000000 # ghG : 0.0 
  12 0.000000 # ve : 0.0 
  14 0.000000 # vm : 0.0 
  16 0.000000 # vt : 0.0 
  11 0.000000 # e- : 0.0 
  13 0.000000 # mu- : 0.0 
  2 0.000000 # u : 0.0 
  4 0.000000 # c : 0.0 
  1 0.000000 # d : 0.0 
  3 0.000000 # s : 0.0 
  251 79.824360 # G+ : cmath.sqrt(MZ**2/2. + cmath.sqrt(MZ**4/4. - (aEW*cmath.pi*MZ**2)/(Gf*cmath.sqrt(2)))) 

###################################
## INFORMATION FOR DECAY
###################################
DECAY   6 1.508336e+00 
DECAY  23 2.495200e+00 
DECAY  24 2.085000e+00 
DECAY  25 6.382339e-03 
##  Not dependent paramater.
## Those values should be edited following analytical the 
## analytical expression. Some generator could simply ignore 
## those values and use the analytical expression
DECAY  22 0.000000 # a : 0.0 
DECAY  21 0.000000 # g : 0.0 
DECAY  9000001 0.000000 # ghA : 0.0 
DECAY  9000005 0.000000 # ghG : 0.0 
DECAY  12 0.000000 # ve : 0.0 
DECAY  14 0.000000 # vm : 0.0 
DECAY  16 0.000000 # vt : 0.0 
DECAY  11 0.000000 # e- : 0.0 
DECAY  13 0.000000 # mu- : 0.0 
DECAY  15 0.000000 # ta- : 0.0 
DECAY  2 0.000000 # u : 0.0 
DECAY  4 0.000000 # c : 0.0 
DECAY  1 0.000000 # d : 0.0 
DECAY  3 0.000000 # s : 0.0 
DECAY  5 0.000000 # b : 0.0 

###################################
## INFORMATION FOR BSM
###################################
Block BSM 
#   30 0.000000e+00 # c2 
#   31 0.000000e+00 # a1 
#   32 0.000000e+00 # a2 
#  188 1.000000e+00 # ctr 
#  189 1.000000e+00 # cy 
{BSM_REST_PART}

###################################
## INFORMATION FOR YUKAWA
###################################
Block YUKAWA 
    5 4.700000e+00 # ymb 
    6 1.730000e+02 # ymt 
   15 1.777000e+00 # ymtau 
#===========================================================
# QUANTUM NUMBERS OF NEW STATE(S) (NON SM PDG CODE)
#===========================================================

Block QNUMBERS 9000001  # ghA 
        1 0  # 3 times electric charge
        2 -1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 9000002  # ghZ 
        1 0  # 3 times electric charge
        2 -1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 9000003  # ghWp 
        1 3  # 3 times electric charge
        2 -1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 9000004  # ghWm 
        1 -3  # 3 times electric charge
        2 -1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 9000005  # ghG 
        1 0  # 3 times electric charge
        2 -1  # number of spin states (2S+1)
        3 8  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 250  # G0 
        1 0  # 3 times electric charge
        2 1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 0  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 251  # G+ 
        1 3  # 3 times electric charge
        2 1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
"""

pythia_template = """
!
! Pythia8 cmd card automatically generated by MadGraph5_aMC@NLO
! For more information on the use of the MG5aMC / Pythia8 interface, visit
!    https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/LOPY8Merging
!
! ==================
! General parameters 
! ==================
!
Main:numberOfEvents      = -1
!
! -------------------------------------------------------------------
! Specify the HEPMC output of the Pythia8 shower. You can set it to:
!   auto      : MG5aMC will automatically place it the run_<i> directory
!   /dev/null : to turn off the HEPMC output.
!   <path>    : to select where the HEPMC file must written. It will 
!               therefore not be placed in the run_<i> directory. The
!               specified path, if not absolute, will be relative to 
!               the Event/run_<i> directory of the process output.
!   fifo      : to have MG5aMC setup the piping of the PY8 output to 
!               analysis tools such as MadAnalysis5.  
!   fifo@<fifo_path> :
!               Same as 'fifo', but selecting a custom path to create the
!               fifo pipe. (useful to select a mounted drive that supports 
!               fifo). Note that the fifo file extension *must* be '.hepmc.fifo'.
! -------------------------------------------------------------------
!
HEPMCoutput:file         = auto
!
! --------------------------------------------------------------------
! Parameters relevant only when performing MLM merging, which can be
! turned on by setting ickkw to '1' in the run_card and chosing a 
! positive value for the parameter xqcut.
! For details, see section 'Jet Matching' on the left-hand menu of 
!    http://home.thep.lu.se/~torbjorn/pythia81html/Welcome.html
! --------------------------------------------------------------------
! If equal to -1.0, MadGraph5_aMC@NLO will set it automatically based 
! on the parameter 'xqcut' of the run_card.dat 
JetMatching:qCut         = -1.0
! Use default kt-MLM to match parton level jets to those produced by the
! shower. But the other Shower-kt scheme is available too with this option.
JetMatching:doShowerKt   = off
! A value of -1 means that it is automatically guessed by MadGraph.
! It is however always safer to explicitly set it.
JetMatching:nJetMax      = -1
!
! --------------------------------------------------------------------
! Parameters relevant only when performing CKKW-L merging, which can
! be turned on by setting the parameter 'ptlund' *or* 'ktdurham' to
! a positive value. 
! For details, see section 'CKKW-L Merging' on the left-hand menu of 
!    http://home.thep.lu.se/~torbjorn/pythia81html/Welcome.html
! --------------------------------------------------------------------
! Central merging scale values you want to be used.
! If equal to -1.0, then MadGraph5_aMC@NLO will set this automatically
! based on the parameter 'ktdurham' of the run_card.dat
Merging:TMS              = -1.0
! This must be set manually, according to Pythia8 directives.
! An example of possible value is 'pp>LEPTONS,NEUTRINOS'
! Alternatively, from Pythia v8.223 onwards, the value 'guess' can be 
! used to instruct Pythia to guess the hard process. The guess would mean 
! that all particles apart from light partons will be considered as a part 
! of the hard process. This guess is prone to errors if the desired hard 
! process is complicated (i.e. contains light partons). The user should
! then be wary of suspicious error messages in the Pythia log file. 
Merging:Process          = <set_by_user>
! A value of -1 means that it is automatically guessed by MadGraph.
! It is however always safer to explicitly set it.
Merging:nJetMax  		 = -1
!
! For all merging schemes, decide whehter you want the merging scale
! variation computed for only the central weights or all other 
! PDF and scale variation weights as well
SysCalc:fullCutVariation = off
!
! ==========================
! User customized parameters 
! ==========================
!
! By default, Pythia8 generates multi-parton interaction events. This is
! often irrelevant for phenomenology and very slow. You can turn this 
! feature off by uncommenting the line below if so desired.
!partonlevel:mpi = off

{PYTHIA_HIGGS_DECAY}
"""

def make_all() :
  for i, bench in enumerate(benchmarks) : 
    if i : break
    lines = ""
    for val, code in zip(bench, parameters_map):
      lines += "set param_card bsm " + str(code) + " " + str(val) + "\n"
    filename = "customizecards_" + str(i) + ".dat"
    file = open(filename, "w")
    file.write(lines)
    file.close()

    # generate p p > h h , (h > b b~) , (h > h)
    # generate p p > h h , (h > h)    , (h > b b~) , (h > h)
    # 0.51791 +- 0.0071638 pb

    # generate p p > h h
    # 0.3165 +- 0.0003795 pb

    # generate p p > h h, (h > b b~), (h > b b~)
    # 0.21046 +- 0.0028558

    processes = ["WWWW"]

    for proc in processes:
      # bbbb - pure pythia
      # yybb - bb in MG ?
      # yyWW - WW in MG ?

      dic = { "OUTPUT_NAME" : "HH_" + proc}
      dic["CHANNEL_1"] = "b b~"
      dic["CHANNEL_2"] = "y y"
      dic["HIGGS_DECAY_1"] = ""
      dic["HIGGS_DECAY_2"] = ""
      dic["RESTRICTION"] = "mod_"+ str(i)

      dic["PYTHIA_HIGGS_DECAY"] = "25:offIfAny = 1 2 3 4 5 11 12 13 14 15 16 17 18 21 22 24"

      lines = ""
      for val, code in zip(bench, parameters_map):
        lines += "  " + str(code) + " " + str(val) + "\n"
      dic["BSM_REST_PART"] = lines
      restrict = restrict_template.format( **dic )
      file = open( "restrict_mod_" + str(i) +".dat", "w")
      file.write(restrict)
      file.close()

      if proc == "yybb":
        dic["HIGGS_DECAY_1"] = ", (h > b b~)"
        dic["HIGGS_DECAY_2"] = ", (h > h)"

        dic["PYTHIA_HIGGS_DECAY"] = "25:offIfAny = 1 2 3 4 5 11 12 13 14 15 16 17 18 21 23 24"

      if proc == "bbbb":
        dic["PYTHIA_HIGGS_DECAY"] = "25:offIfAny = 1 2 3 4 11 12 13 14 15 16 17 18 21 22 23 24"

      if proc == "yyWW":
        dic["PYTHIA_HIGGS_DECAY"] = "25:offIfAny = 1 2 3 4 5 11 12 13 14 15 16 17 18 21 23"

      if proc == "WWWW":
        dic["PYTHIA_HIGGS_DECAY"] = "25:offIfAny = 1 2 3 4 5 11 12 13 14 15 16 17 18 21 22 23"

      proc_card = proc_template.format( **dic )
      madspin_card = madspin_template.format( **dic )
      pythia_card = pythia_template.format( **dic )

      if not i : 
        proc_card = proc_template_sm.format( **dic )

      file = open( proc + "_proc_card_" + str(i) +".dat", "w")
      file.write(proc_card)
      file.close()

      file = open( proc + "_pythia_card.dat", "w")
      file.write(pythia_card)
      file.close()


      #file = open( proc + "_madspin_card.dat", "w")
      #file.write(madspin_card)
      #file.close()





make_all()











